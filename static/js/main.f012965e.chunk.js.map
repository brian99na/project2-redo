{"version":3,"sources":["components/Main/Header.js","components/videos/cionpiggie_VP9.webm","components/Main/Page 1/Prices.js","components/Main/Page 1/SecondInvestment.js","components/Main/Page 1/Landing.js","components/Main/Page 1/Homepage.js","components/Main/Page 2 - Crypto/CryptoChart.js","components/Main/Page 2 - Crypto/CryptoPage.js","components/Main/Page 3 - Inflation/InflationChart.js","components/Main/Page 3 - Inflation/InflationPage.js","components/Main/Main.js","App.js","index.js"],"names":["Header","props","useState","active","setActive","handleClick","e","setNavbarClickable","navbarClickable","navbarLinkClass","navbarIconClass","titleClass","routePageClass","className","to","onClick","Prices","inputAmount","mainData","inputPrice","Number","toLocaleString","bitcoinDetailsRef","useRef","controls","autostart","autoPlay","loop","Video","results","priceNow","percentChange","current","scrollIntoView","behavior","block","inline","ref","href","rel","target","handleInflationClick","SecondInvestment","inflation","src","alt","percentage","Landing","value","setValue","onSubmit","preventDefault","setMainData","setHomepageVisible","type","onChange","placeholder","Homepage","homepageVisible","priceRef","inflationRef","useEffect","CryptoChart","date","price","chartData","setChartData","headerDate","setHeaderDate","newArr","cryptoData","reverse","console","log","Date","mapData","map","day","index","year","getFullYear","month","getMonth","i","Math","floor","inputDate","monthNum","slice","yearNum","cryptoChartCalculator","chartRef","coin","ResponsiveContainer","width","height","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","fill","stroke","XAxis","axisLine","tickLine","tickFormatter","item","YAxis","tickCount","Tooltip","CartesianGrid","vertical","PricesDetails","cryptoList","setCryptoList","parameters","setParameters","coinId","setResults","past","setPrice","cryptoCalc","setCryptoCalc","dropDown","setDropDown","resultJSX","setResultJSX","focusDropDown","setCryptoData","handleSubmit","cryptoStartCoin","filter","cryptoItem","name","match","cryptoIncludeCoin","combList","concat","cryptoJSX","coinImage","onError","cryptoItemId","cryptoItemName","iconWebsite","resultsJSX","loadingJSX","fetch","then","res","json","usd","dayValue","prices","chartApiCall","market_data","current_price","currentPrice","toFixed","priceLocale","percentLocale","cryptoCalculator","dropDown1","dropDownCSS","length","dropDownVal","InflationChart","indexValue","result","inflationSlice","toString","CPI_index_value","inflationChartCalculator","SecondInvestmentDetails","amountLost","setInflation","inputValue","setInputValue","setResult","jsx","setJsx","inflationJSX","dataset","inflationCalculator","Main","coinPriceCurrent","setCoinPriceCurrent","coinPricePast","setCoinPricePast","amountNow","bitcoin","document","title","exact","path","render","CryptoPage","InflationPage","App","ReactDOM","basename","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f012965e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HiTrendingDown } from \"react-icons/hi\";\nimport './Header.css'\n\nconst Header = (props) => {\n  const [active, setActive] = useState(\"false\");\n\n  const handleClick = (e) => {\n    setActive(!active);\n    props.setNavbarClickable(!props.navbarClickable)\n  };\n\n  \n  const navbarLinkHandle = active ? null : 'navbarOpen';\n  const navbarLinkClass = `navbarClosed ${navbarLinkHandle}`\n\n  const navbarIconHandle = active ? null : 'navbarIconRotate';\n  const navbarIconClass = `navbarIcon ${navbarIconHandle}`\n\n  const titleClass  = `navbarTitle ${props.routePageClass}`\n\n  return (\n    <nav className='navbarMain'>\n      <div className='navbar'>\n        <Link to=\"/\" className={titleClass}>\n          What if?\n        </Link>\n        <HiTrendingDown className={navbarIconClass} onClick={handleClick}/>\n        <div className={navbarLinkClass}>\n          <Link to=\"/Crypto-Details\" onClick={handleClick} className='navbarLinks'>\n            Crypto Calculator\n          </Link>\n          <Link to=\"/Inflation\" onClick={handleClick} className='navbarLinks'>\n            Inflation Calculator\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/cionpiggie_VP9.6dd0ebb0.webm\";","import { Link } from \"react-router-dom\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport { useRef } from \"react\";\nimport Video from '../../videos/cionpiggie_VP9.webm'\n\nfunction Prices(props) {\n    \n    const inputAmount = props.mainData.inputPrice && Number(props.mainData.inputPrice).toLocaleString()\n    const bitcoinDetailsRef = useRef()\n\n\n    const handleArrowClick = () => {\n        bitcoinDetailsRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n          inline: \"center\",\n        });\n      };\n\n\n    return (\n        <>\n            <div className='prices'>\n                {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/BTC_Logo.svg/183px-BTC_Logo.svg.png\" alt='btc'/> */}\n                <div className='coinFlip'>\n                    <video controls autostart autoPlay loop controls={false} src={Video} type=\"video/webm\" />\n                </div>\n                <div className='pricesLower'>\n                <h1 className='pricesHomeText'>your <span className='boldText'>${inputAmount}</span> is now worth</h1>\n                <h1 className='boldText'>${props.results.priceNow}</h1>\n                <h1 className='pricesHomeText'>that's a change of</h1>\n                <h1 className='boldText'>{props.results.percentChange}%</h1>\n                <Link to='/Crypto-Details'>\n                    <button className='pricesButton'>Try out a different cryptocurrency here</button>\n                </Link>\n                </div>\n                <MdOutlineKeyboardArrowDown className='pricesArrow' onClick={handleArrowClick} />\n            </div>\n            <div className='bitcoinDetailsUpper'>\n                <div className='bitcoinDetails' ref={bitcoinDetailsRef}>\n                    <h1 >What is Bitcoin?</h1>\n                    <p>Bitcoin is the first and most valuable cryptocurrency in the world.</p>\n                    <p>It is often referred to as</p>\n                    <h1 >Digital Gold</h1>\n                    <p>and serves a similar purpose in hedging against inflation. The US Government has printed trillions of dollars over the past year and almost</p>\n                    <a href='https://www.cityam.com/almost-a-fifth-of-all-us-dollars-were-created-this-year/' rel='noreferrer' target=\"_blank\"><h1>1/5th of all US Dollars were created in 2020.</h1></a>\n                    <p>Inflation is a large issue in the US and Bitcoin offers a solution in being a decentralization, deflationary asset that cannot be manipulated by central governments.    </p>\n                    <a className='bitcoinLink' href='https://www.nerdwallet.com/article/investing/what-is-bitcoin' rel='noreferrer' target=\"_blank\"><button >Read more about Bitcoin</button></a>\n                </div>\n                <MdOutlineKeyboardArrowDown className='bitcoinArrow' onClick={props.handleInflationClick} />\n            </div>\n        </>\n    )\n}\n\nexport default Prices;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SecondInvestment(props) {\n\n    let priceDiff = props.inflation.priceNow - props.mainData.inputPrice\n\n    return (\n        <div className='home3lower'>\n            <img src=\"https://findicons.com/files/icons/2219/dot_pictograms/256/usd_dollar_money_cash.png\" alt='btc'/>\n            <div className='inflationHome'>\n                <h1 className='inflationHomeText'>By holding the US Dollar</h1>\n                <h1 className='inflationHomeText'>your <span className='boldText'>${props.mainData.inputPrice}</span> has lost</h1>\n                <h1 className='boldText'>{props.inflation.percentage}%</h1>\n                <h1 className='inflationHomeText'>of its value since 2017.</h1>\n                <Link to='/Inflation'>\n                    <button>Try out some different values for inflation</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SecondInvestment\n","import React, { useState } from \"react\";\n\nfunction Landing(props) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setMainData({ ...props.mainData, inputPrice: value });\n    setValue(\"\");\n    props.setHomepageVisible(true)\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    props.setHomepageVisible(false)\n  };\n\n  return (\n    <div className='home1Lower'>\n      <h1>you invested</h1>\n      <form className='landingForm'onSubmit={handleSubmit}>\n        <input\n          value={value}\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"$1000\"\n        ></input>\n      </form>\n      <h1>into Bitcoin in 2017.</h1>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Prices from \"./Prices\";\nimport SecondInvestment from \"./SecondInvestment\";\nimport Landing from \"./Landing\";\nimport './Page1.css'\n\nfunction Homepage(props) {\n  const [homepageVisible, setHomepageVisible] = useState(false)\n  const priceRef = useRef();\n  const inflationRef = useRef();\n\n  useEffect(()=>{\n    homepageVisible && priceRef.current.scrollIntoView({\n      behavior: \"smooth\",\n\n    });\n  },[homepageVisible])\n\n  const handleInflationClick = () => {\n    inflationRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  return (\n    <div className='homepage'>\n      <section className='home1'>\n        <Landing priceRef={priceRef} mainData={props.mainData} setMainData={props.setMainData} setHomepageVisible={setHomepageVisible}/>\n      </section>\n      {homepageVisible && <section ref={priceRef} className='home2'>\n        <Prices results={props.results} mainData={props.mainData} inflationRef={props.inflationRef} handleInflationClick={handleInflationClick}/>\n      </section>}\n      {homepageVisible && <section ref={inflationRef} className='home3'>\n        <SecondInvestment inflation={props.inflation} mainData={props.mainData}/>\n      </section>}\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React, { useState, useEffect } from 'react'\nimport { ResponsiveContainer ,AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nfunction CryptoChart(props) {\n    const [chartData, setChartData] = useState([{date: 'x', price: 'y'}])\n    const [headerDate, setHeaderDate] = useState('')\n\n    const cryptoChartCalculator = () => {\n        const newArr = props.cryptoData && props.cryptoData.reverse()\n        console.log(newArr)\n        const date = new Date()\n        const mapData = newArr && newArr.map((day, index) => {\n            let year = date.getFullYear()\n            let month = date.getMonth()\n            for (let i=0; i<(Math.floor(index/30)); i++) {\n                month -= 1\n                if (month === 0) {\n                    year -= 1\n                    month = 12\n                }\n            }\n            return (\n                {\n                    date: `${year}-${month}`,\n                    price: day[1]\n                }\n            )\n        })\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ];\n        let inputDate = props.results.date\n        let monthNum = Number(inputDate.slice(3, 5)) - 1;\n        let yearNum = inputDate.slice(6, 10);\n        setHeaderDate(`${months[monthNum]} of ${yearNum}`)\n        setChartData(mapData.reverse())\n    }\n\n    useEffect(() => {\n        cryptoChartCalculator()\n    }, [props.results])\n\n    console.log(chartData)\n\n    return (\n        <div className='inflationChart' ref={props.chartRef}>\n            <h1>Price of {props.results.coin} since {headerDate}</h1>\n            <ResponsiveContainer width=\"100%\" height='70%'>\n                <AreaChart data={chartData} >\n                    <defs>\n                        <linearGradient id='color' x1='0' y1='0' x2='0' y2='1'>\n                            <stop offset=\"0%\" stopColor='#4D4E52' stopOpacity={1}/>\n                            <stop offset=\"75%\" stopColor='#4D4E52' stopOpacity={0.15}/>\n                        </linearGradient>\n                    </defs>\n\n                    <Area dataKey=\"price\" fill='url(#color)' stroke='black'/>\n                    <XAxis dataKey=\"date\" axisLine={false} tickLine={false} tickFormatter={item => {\n                        const months = [\n                            \"January\",\n                            \"February\",\n                            \"March\",\n                            \"April\",\n                            \"May\",\n                            \"June\",\n                            \"July\",\n                            \"August\",\n                            \"September\",\n                            \"October\",\n                            \"November\",\n                            \"December\",\n                          ];\n                      \n                        let monthNum = Number(item.slice(5, 7)) - 1;\n                        let yearNum = item.slice(0, 4);\n                        return(\n                            `${months[monthNum]} - ${yearNum}`\n                        )\n                    }}/>\n                    <YAxis dataKey=\"price\" axisLine={false} tickLine={false} tickCount={10} />\n                    <Tooltip />\n                    <CartesianGrid vertical={false}/>\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default CryptoChart;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport CryptoChart from \"./CryptoChart\";\nimport './Page2.css'\n\nfunction PricesDetails(props) {\n  const [cryptoList, setCryptoList] = useState([]);\n  const [parameters, setParameters] = useState({\n    date: '',\n    price: '',\n    coin: '',\n  });\n  const [results, setResults] = useState({\n    date: '',\n    price: '',\n    coin: '',\n    coinId: '',\n  });\n  const [price, setPrice] = useState({current: '', past: ''});\n  const [cryptoCalc, setCryptoCalc] = useState({\n    priceNow: '',\n    percentChange: '',\n  });\n  const [dropDown, setDropDown] = useState(false);\n  const [resultJSX, setResultJSX] = useState(false);\n  const focusDropDown = useRef();\n  const [cryptoData, setCryptoData] = useState([])\n  const chartRef = useRef()\n\n  // Api Calls and Calculating Functions\n\n  const cryptoApiCall = () => {\n    fetch(\"https://api.coingecko.com/api/v3/coins/list\")\n      .then((res) => res.json())\n      .then((data) => setCryptoList(data));\n  };\n\n  const currentApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/simple/price?ids=${results.coinId}&vs_currencies=usd`\n    )\n      .then((res) => res.json())\n      .then((data) => data[results.coinId] && setPrice({...price, current: data[results.coinId].usd}));\n  };\n\n  const oldApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/${results.coinId}/history?date=${results.date}&localization=false`\n    )\n      .then((res) => res.json())\n      .then((data) => data.market_data && setPrice({...price, past: data.market_data.current_price.usd})\n      );\n  };\n\n  const chartApiCall = () => {\n    let day = new Date()\n    let dayValue = (2021 - Number(results.date.slice(6, 10))) * 365 + ((Number(day.getMonth()) + 1) - Number(results.date.slice(3, 5))) * 30\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/${results.coinId}/market_chart?vs_currency=usd&days=${dayValue}&interval=monthly`\n    )\n      .then((res) => res.json())\n      .then((data) => setCryptoData(data.prices))\n  };\n\n  const cryptoCalculator = () => {\n    const currentPrice = ((results.price * price.current) / price.past).toFixed(2);\n    const percentChange = ((currentPrice / results.price) * 100).toFixed(0);\n    const priceLocale = Number(currentPrice).toLocaleString();\n    const percentLocale = Number(percentChange).toLocaleString();\n    setCryptoCalc({ priceNow: priceLocale, percentChange: percentLocale })\n  };\n\n  const scrollFunction = () => {\n    resultsJSX &&  focusDropDown.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n}\n\n  // Handle Changes, Clicks, and Submits\n\n  const handleDateChange = (e) => {\n    setParameters({ ...parameters, date: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handlePriceChange = (e) => {\n    setParameters({ ...parameters, price: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handleCoinChange = (e) => {\n    setDropDown(true);\n    setParameters({ ...parameters, coin: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handleCryptoClick = (e, cryptoItemId, cryptoItemName) => {\n    setParameters({ ...parameters, coin: cryptoItemName, coinId: cryptoItemId });\n    setDropDown(false);\n  };\n\n  const handleArrowClick = () => {\n    chartRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setResults({...parameters});\n    setResultJSX(true);\n  };\n\n  // Crypto Drop Down List\n\n  const cryptoStartCoin =\n    parameters.coin &&\n    cryptoList.filter((cryptoItem) =>\n      cryptoItem.name.match(\"^\" + parameters.coin)\n    );\n\n  const cryptoIncludeCoin =\n    parameters.coin &&\n    cryptoList.filter((cryptoItem) =>\n      cryptoItem.name.match(\"(?<!^)\" + parameters.coin)\n    );\n\n  const combList = parameters.coin && cryptoStartCoin.concat(cryptoIncludeCoin);\n\n  const cryptoJSX =\n    (parameters.coin && dropDown) &&\n    combList.map((cryptoItem) => {\n      let coinImage = `https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/32/${cryptoItem.id}.png`\n      return (\n      <div className='cryptoJSXDiv'>\n        <img className='cryptoCoinImage' alt='coinImage' onError={(e)=>{e.target.src='https://assets.coingecko.com/coins/images/19978/thumb/logo.f3a6bd24.png?1636355493'}} src={coinImage}/>\n        <span\n          className=\"cryptoElement regularFont\"\n          onClick={(e) => handleCryptoClick(e, cryptoItem.id, cryptoItem.name)}>\n          {cryptoItem.name}\n        </span>\n      </div>\n    )});\n\n    let iconWebsite = `https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/128/${results.coinId}.png`\n\n  // Results JSX\n\n  const resultsJSX = resultJSX && (\n      <div className='resultsJSXBorder'>\n        <img className='cryptoCoinImage'src={iconWebsite} alt='coinImage' onError={(e)=>{e.target.src='https://www.pngall.com/wp-content/uploads/2/Question-Mark-PNG-Image.png'}}/>\n        <div className='resultsJSXText'>\n          <h1 className='cryptoText'>\n            Your <span>${results.price}</span> is now worth:\n          </h1>\n          <h1 className='boldText'>${cryptoCalc.priceNow}</h1>\n          <h1 className='cryptoText'>a change of:</h1>\n          <h1 className='boldText'>{cryptoCalc.percentChange}%</h1>\n        </div>\n      </div>\n  );\n\n  const loadingJSX = \n      <div className='skeletonCrypto'>\n        <div className='skeleton-icon'></div>\n        <div className='skeletonTextArea'>\n          <div className='skeleton-text'></div>\n          <div className='skeleton-text-big'></div>\n          <div className='skeleton-text'></div>\n          <div className='skeleton-text-big'></div>\n          <div className='skeleton-text'></div>\n          <div className='skeleton-text-big'></div>\n        </div>\n      </div>\n\n  // Use Effects\n\n  useEffect(() => {\n    cryptoApiCall()\n  }, [])\n\n  useEffect(() => {\n    currentApiCall();\n    chartApiCall()\n  }, [results])\n\n  useEffect(() => {\n    oldApiCall();\n    scrollFunction()\n  }, [price.current])\n\n  useEffect(() => {\n    (price.current && price.past) && cryptoCalculator();\n    setParameters({\n      date: '',\n      price: '',\n      coin: '',\n    })\n  }, [price])\n\n\n  const dropDown1 = dropDown ? \"cryptoDropDownActive\" : null;\n  const dropDownCSS = parameters.coin.length > 0 ? dropDown1 : null;\n  const dropDownVal = `cryptoDropDown ${dropDownCSS}`;\n\n  return (\n    <div className='cryptoUpper'>\n      <div className=\"cryptoMain\">\n        <form className=\"cryptoForm\" onSubmit={handleSubmit}>\n          <h1 className=\"regularFont priceDetailTitle\">On </h1>\n          <input\n            type=\"text\"\n            placeholder=\"DD-MM-YYYY\"\n            onChange={handleDateChange}\n            value={parameters.date}\n          ></input>\n          <h1 >You invested</h1>\n          <input\n            type=\"text\"\n            onChange={handlePriceChange}\n            value={parameters.price}\n            placeholder=\"$\"\n          ></input>\n          <h1>into</h1>\n          <input\n            type=\"text\"\n            onChange={handleCoinChange}\n            value={parameters.coin}\n            placeholder=\"Enter Coin\"\n          ></input>\n          <div className={dropDownVal}>\n            {cryptoJSX}\n          </div>\n          <button onClick={handleSubmit}>Calculate</button>\n        </form>\n        <div className='inflationDivide'></div>\n        <div className=\"resultsJSX\" ref={focusDropDown}>\n          {resultJSX ? resultsJSX : loadingJSX}\n        </div>\n        {resultJSX && <MdOutlineKeyboardArrowDown className='homepageArrow' onClick={handleArrowClick} />}\n        {(resultJSX && cryptoData) && <CryptoChart chartRef={chartRef} cryptoData={cryptoData} results={results} />}\n      </div>\n    </div>\n  );\n}\n\nexport default PricesDetails;\n","import React, { useState, useEffect } from 'react'\nimport { ResponsiveContainer ,AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nfunction InflationChart(props) {\n    const [chartData, setChartData] = useState([])\n    const [headerDate, setHeaderDate] = useState('')\n\n\n    const inflationChartCalculator = () => {\n        const indexValue = (props.result && props.result.date )&& (12 * (2021 - Number(props.result.date.slice(6, 10)))) + (11 - Number(props.result.date.slice(3, 5)))\n        let inflationSlice = props.inflation.data && props.inflation.data.slice(0, indexValue)\n        const chartData = inflationSlice && inflationSlice.map(data => {\n            return(\n                {\n                    date: data[0].toString(),\n                    CPI_index_value: data[1]\n                }\n            )\n        })\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ];\n        let inputDate = props.result.date\n        let monthNum = Number(inputDate.slice(3, 5)) - 1;\n        let yearNum = inputDate.slice(6, 10);\n        setHeaderDate(`${months[monthNum]} of ${yearNum}`)\n        chartData && chartData.reverse()\n        setChartData(chartData)\n    }\n\n    useEffect(() => {\n        inflationChartCalculator()\n    }, [props.result])\n\n    console.log(chartData)\n\n    return (\n        <div className='inflationChart' ref={props.chartRef}>\n            <h1>CPI Index Value since {headerDate}</h1>\n            <ResponsiveContainer width=\"100%\" height='70%'>\n                <AreaChart data={chartData} >\n\n                    <defs>\n                        <linearGradient id='color' x1='0' y1='0' x2='0' y2='1'>\n                            <stop offset=\"0%\" stopColor='#4D4E52' stopOpacity={1}/>\n                            <stop offset=\"75%\" stopColor='#4D4E52' stopOpacity={0.15}/>\n                        </linearGradient>\n                    </defs>\n\n                    <Area dataKey=\"CPI_index_value\" fill='url(#color)' stroke='black'/>\n                    <XAxis dataKey=\"date\" axisLine={false} tickLine={false} tickFormatter={item => {\n                        const months = [\n                            \"January\",\n                            \"February\",\n                            \"March\",\n                            \"April\",\n                            \"May\",\n                            \"June\",\n                            \"July\",\n                            \"August\",\n                            \"September\",\n                            \"October\",\n                            \"November\",\n                            \"December\",\n                          ];\n                      \n                        let monthNum = Number(item.slice(5, 7)) - 1;\n                        let yearNum = item.slice(0, 4);\n                        return(\n                            `${months[monthNum]} - ${yearNum}`\n                        )\n                    }}/>\n                    <YAxis dataKey=\"CPI_index_value\" axisLine={false} tickLine={false} tickCount={10} />\n                    <Tooltip />\n                    <CartesianGrid vertical={false}/>\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default InflationChart\n","import React, { useRef, useState, useEffect } from \"react\";\nimport InflationChart from \"./InflationChart\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport './Page3.css'\n\n\nfunction SecondInvestmentDetails(props) {\n  const [inflation, setInflation] = useState({data: null, percentage: null, priceNow: null, amountLost: null})\n  const [inputValue, setInputValue] = useState({date: null, price: null})\n  const [result, setResult] = useState({date: null, price: null})\n  const [jsx, setJsx] = useState(false);\n  const inflationRef = useRef();\n  const chartRef = useRef()\n\n  const inflationApiCall = () => {\n    fetch(\"https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA.json?api_key=dDi1qzdRACZxKWbNGJRx\")\n      .then((res) => res.json())\n      .then((data) => setInflation({...inflation, data: data.dataset.data}))\n  };\n\n  const inflationCalculator = () => {\n    const indexValue = inputValue.date && (12 * (2021 - Number(inputValue.date.slice(6, 10)))) + (11 - Number(inputValue.date.slice(3, 5)))\n    const percentage = indexValue && (((274.31 - Number(inflation.data[indexValue][1]))/Number(inflation.data[indexValue][1])) * 100).toFixed(2);\n    const currentPrice = ((percentage/100 + 1) * result.price).toFixed(2)\n    const amountLost = Number(currentPrice - result.price).toFixed(2)\n    setInflation({...inflation, percentage: percentage, priceNow: currentPrice, amountLost: amountLost})\n  }\n\n  const handleDateChange = (e) => {\n    setInputValue({...inputValue, date: e.target.value});\n    setJsx(false)\n  };\n\n  const handlePriceChange = (e) => {\n    setInputValue({...inputValue, price: e.target.value});\n    setJsx(false)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    setResult({...inputValue})\n    setJsx(true);\n  };\n\n  const handleArrowClick = () => {\n    chartRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  const inflationJSX = jsx && ( \n      <div className={jsx ? 'inflationJsx' : 'invisible'} ref={inflationRef}>\n        <h1 className='inflationText'> Cumulative Inflation Rate: </h1>\n        <h1 className='boldText'>{inflation.percentage}%</h1>\n        <h1 className='inflationText'>Inflated Price:</h1>\n        <h1 className='boldText'>${inflation.priceNow}</h1>\n        <h1 className='inflationText'>You have lost</h1>\n        <h1 className='boldText'>${inflation.amountLost}</h1>\n        <h1 className='inflationText'>of value by holding </h1>\n        <h1 className='boldText'>the US Dollar</h1>\n      </div>\n  );\n\n  const loadingJSX = \n      <div className='skeletonInflation'>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n      </div>\n\n  const scrollFunction = () => {\n      inflationJSX && inflationRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  }\n\n  useEffect(() => {\n    inflationApiCall()\n  }, [])\n\n  useEffect(() => {\n    inflationCalculator()\n    scrollFunction()\n    setInputValue({date: '', price: ''})\n  }, [result])\n\n  return (\n    <div className='inflationMain'>\n      <form className='inflationForm'handleSubmit={handleSubmit}>\n        <h1>You held your</h1>\n        <input\n          value={inputValue.price}\n          onChange={handlePriceChange}\n          type=\"text\"\n          placeholder=\"$\"\n        ></input>\n        <h1 className=\"regularFont\">in cash since</h1>\n        <input\n          value={inputValue.date}\n          onChange={handleDateChange}\n          type=\"text\"\n          placeholder=\"DD-MM-YYYY\"\n        ></input>\n        <br />\n        <button onClick={handleSubmit}>Enter</button>\n      </form>\n      <div className='inflationDivide'></div>\n      <div className='inflationResults'>\n        {jsx ? inflationJSX : loadingJSX}\n      </div>\n      {jsx && <MdOutlineKeyboardArrowDown className='homepageArrow' onClick={handleArrowClick} />}\n      {jsx && <InflationChart chartRef={chartRef}inflation={inflation} jsx={jsx} result={result}/>}\n    </div>  \n  );\n}\n\nexport default SecondInvestmentDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Homepage from \"./Page 1/Homepage\";\nimport CryptoPage from './Page 2 - Crypto/CryptoPage';\nimport InflationPage from './Page 3 - Inflation/InflationPage';\n\nfunction Main(props) {\n  const [mainData, setMainData] = useState({inputPrice: '', date: '30-03-2017', coin: 'bitcoin'})\n  const [coinPriceCurrent, setCoinPriceCurrent] = useState('');\n  const [coinPricePast, setCoinPricePast] = useState('');\n  const [results, setResults] = useState({priceNow: '', percentChange: ''});\n  const [inflation, setInflation] = useState({data: '', percentage: '', amountNow: ''})\n\n  const currentApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`\n    )\n      .then((res) => res.json())\n      .then((data) => setCoinPriceCurrent(data.bitcoin.usd))\n  };\n\n  const oldApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/bitcoin/history?date=30-03-2017&localization=false`\n    )\n      .then((res) => res.json())\n      .then((data) => setCoinPricePast(data.market_data.current_price.usd))\n  };\n\n  const inflationApiCall = () => {\n    fetch(`https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA.json?api_key=dDi1qzdRACZxKWbNGJRx`)\n      .then((res) => res.json())\n      .then((data) => setInflation({...inflation, data: data.dataset.data}))\n  };\n\n  const cryptoCalculator= () => {\n    const currentPrice = ((mainData.inputPrice * coinPriceCurrent)/coinPricePast).toFixed(2);\n    const percentChange = ((currentPrice/ mainData.inputPrice) * 100).toFixed(0);\n    const priceLocale = Number(currentPrice).toLocaleString();\n    const percentLocale = Number(percentChange).toLocaleString();\n    setResults({ priceNow: priceLocale, percentChange: percentLocale });\n  };\n\n  const inflationCalculator = () => {\n    const indexValue = (12 * (2021 - Number(mainData.date.slice(6, 10)))) + (9 - Number(mainData.date.slice(3, 5)))\n    const percentage = inflation.data && (((274.31 - Number(inflation.data[indexValue][1]))/Number(inflation.data[indexValue][1])) * 100).toFixed(2)\n    const amountNow = (percentage / 100) + 1\n    setInflation({...inflation, percentage: percentage, amountNow: amountNow})\n  }\n\n  useEffect(() => {\n    inflationApiCall()\n    currentApiCall()\n    oldApiCall()\n    document.title = \"What if?\"\n  }, [])\n\n  useEffect(() => {\n    cryptoCalculator()\n    inflationCalculator()\n  }, [mainData.inputPrice])\n\n  return (\n    <div className={props.routePageClass}>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Homepage results={results} mainData={mainData} setMainData={setMainData} inflation={inflation}/>}\n        />\n        <Route\n          exact\n          path=\"/Crypto-Details\"\n          render={() => <CryptoPage />}\n        />\n        <Route\n          exact\n          path=\"/Inflation\"\n          render={() => <InflationPage/>}\n        />\n    </div>\n  );\n}\n\nexport default Main;\n","import './App.css';\nimport Header from './components/Main/Header';\nimport Main from './components/Main/Main';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [navbarClickable, setNavbarClickable] = useState('false')\n\n  const handleRoutePageClass = navbarClickable ? '' : 'routePageUnclickable';\n  const routePageClass = `routePage ${handleRoutePageClass}`\n\n  return (\n    <div className=\"App\">\n      <Header routePageClass={routePageClass} navbarClickable={navbarClickable} setNavbarClickable={setNavbarClickable}/>\n      <Main routePageClass={routePageClass} navbarClickable={navbarClickable}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/what-if'>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}