{"version":3,"sources":["components/Main/Header.js","components/videos/cionpiggie_VP9.webm","components/Main/Page 1/Prices.js","components/Main/Page 1/SecondInvestment.js","components/Main/Page 1/Landing.js","components/Main/Page 1/Homepage.js","components/Main/Page 2 - Crypto/CryptoChart.js","components/Main/Page 2 - Crypto/CryptoPage.js","components/Main/Page 3 - Inflation/InflationChart.js","components/Main/Page 3 - Inflation/InflationPage.js","components/Main/Main.js","App.js","index.js"],"names":["Header","props","useState","active","setActive","handleClick","e","setNavbarClickable","navbarClickable","navbarLinkClass","navbarIconClass","titleClass","routePageClass","className","to","onClick","Prices","inputAmount","mainData","inputPrice","Number","toLocaleString","bitcoinDetailsRef","useRef","ref","priceRef","window","innerHeight","innerWidth","controls","autostart","autoPlay","loop","Video","src","alt","results","priceNow","percentChange","current","scrollIntoView","behavior","block","inline","href","rel","target","handleInflationClick","SecondInvestment","inflation","percentage","Landing","value","setValue","onSubmit","preventDefault","setMainData","setHomepageVisible","type","onChange","placeholder","Homepage","homepageVisible","inflationRef","useEffect","CryptoChart","date","price","chartData","setChartData","headerDate","setHeaderDate","newArr","cryptoData","reverse","console","log","Date","mapData","map","day","index","year","getFullYear","month","getMonth","i","Math","floor","inputDate","monthNum","slice","yearNum","cryptoChartCalculator","chartRef","coin","ResponsiveContainer","width","height","AreaChart","data","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","Area","dataKey","fill","stroke","XAxis","axisLine","tickLine","tickFormatter","item","YAxis","tickCount","Tooltip","CartesianGrid","vertical","PricesDetails","cryptoList","setCryptoList","parameters","setParameters","coinId","setResults","past","setPrice","cryptoCalc","setCryptoCalc","dropDown","setDropDown","resultJSX","setResultJSX","focusDropDown","setCryptoData","errorMsg","setErrorMsg","handleSubmit","moment","isValid","cryptoStartCoin","filter","cryptoItem","name","match","cryptoIncludeCoin","combList","concat","cryptoJSX","coinImage","onError","cryptoItemId","cryptoItemName","iconWebsite","resultsJSX","loadingJSX","fetch","then","res","json","usd","catch","error","dayValue","prices","chartApiCall","market_data","current_price","currentPrice","toFixed","priceLocale","percentLocale","cryptoCalculator","dropDown1","dropDownCSS","length","dropDownVal","InflationChart","indexValue","result","inflationSlice","toString","CPI_index_value","inflationChartCalculator","SecondInvestmentDetails","amountLost","setInflation","inputValue","setInputValue","setResult","jsx","setJsx","inflationJSX","dataset","inflationCalculator","Main","coinPriceCurrent","setCoinPriceCurrent","coinPricePast","setCoinPricePast","amountNow","bitcoin","document","title","exact","path","render","CryptoPage","InflationPage","App","ReactDOM","basename","StrictMode","getElementById"],"mappings":"yTA0CeA,EArCA,SAACC,GACd,MAA4BC,mBAAS,SAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAc,SAACC,GACnBF,GAAWD,GACXF,EAAMM,oBAAoBN,EAAMO,kBAK5BC,EAAe,uBADIN,EAAS,KAAO,cAInCO,EAAe,qBADIP,EAAS,KAAO,oBAGnCQ,EAAU,sBAAmBV,EAAMW,gBAEzC,OACE,qBAAKC,UAAU,aAAf,SACE,sBAAKA,UAAU,SAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAWF,EAAxB,sBAGA,cAAC,IAAD,CAAgBE,UAAWH,EAAiBK,QAASV,IACrD,sBAAKQ,UAAWJ,EAAhB,UACE,cAAC,IAAD,CAAMK,GAAG,kBAAkBC,QAASV,EAAaQ,UAAU,cAA3D,+BAGA,cAAC,IAAD,CAAMC,GAAG,aAAaC,QAASV,EAAaQ,UAAU,cAAtD,2C,gCCjCK,MAA0B,4CCoD1BG,MA/Cf,SAAgBf,GAAQ,IAAD,EACbgB,EAAchB,EAAMiB,SAASC,YAAcC,OAAOnB,EAAMiB,SAASC,YAAYE,iBAC7EC,EAAoBC,mBAU1B,OACI,qCACI,sBAAKV,UAAU,SAAQW,IAAKvB,EAAMwB,SAAlC,UAEI,qBAAKZ,UAAU,WAAf,SACKa,OAAOC,YAAcD,OAAOE,WAAa,0BAAOC,UAAQ,EAACC,WAAS,EAACC,UAAQ,EAACC,MAAI,GAAvC,0BAAkD,GAAlD,oBAA8DC,GAA9D,0BAA+E,aAA/E,qBAAgG,cAAhG,IAAkH,qBAAKpB,UAAU,UAAUqB,IAAI,yBAAyBC,IAAI,UAE1N,sBAAKtB,UAAU,cAAf,UACA,qBAAIA,UAAU,iBAAd,kBAAoC,uBAAMA,UAAU,WAAhB,cAA6BI,KAAjE,mBACA,qBAAIJ,UAAU,WAAd,cAA2BZ,EAAMmC,QAAQC,YACzC,oBAAIxB,UAAU,iBAAd,gCACA,qBAAIA,UAAU,WAAd,UAA0BZ,EAAMmC,QAAQE,cAAxC,OACA,cAAC,IAAD,CAAMxB,GAAG,kBAAT,SACI,wBAAQD,UAAU,eAAlB,0DAGJ,cAAC,IAAD,CAA4BA,UAAU,cAAcE,QAxBvC,WACrBO,EAAkBiB,QAAQC,eAAe,CACvCC,SAAU,SACVC,MAAO,SACPC,OAAQ,iBAsBN,sBAAK9B,UAAU,sBAAf,UACI,sBAAKA,UAAU,iBAAiBW,IAAKF,EAArC,UACI,kDACA,oGACA,2DACA,8CACA,4KACA,mBAAGsB,KAAK,kFAAkFC,IAAI,aAAaC,OAAO,SAAlH,SAA2H,iFAC3H,0MACA,mBAAGjC,UAAU,cAAc+B,KAAK,+DAA+DC,IAAI,aAAaC,OAAO,SAAvH,SAAgI,kEAEpI,cAAC,IAAD,CAA4BjC,UAAU,eAAeE,QAASd,EAAM8C,8BC1BrEC,MAjBf,SAA0B/C,GACtB,OACI,sBAAKY,UAAU,aAAf,UACI,qBAAKqB,IAAI,sFAAsFC,IAAI,QACnG,sBAAKtB,UAAU,gBAAf,UACI,oBAAIA,UAAU,oBAAd,sCACA,qBAAIA,UAAU,oBAAd,kBAAuC,uBAAMA,UAAU,WAAhB,cAA6BZ,EAAMiB,SAASC,cAAnF,eACA,qBAAIN,UAAU,WAAd,UAA0BZ,EAAMgD,UAAUC,WAA1C,OACA,oBAAIrC,UAAU,oBAAd,sCACA,cAAC,IAAD,CAAMC,GAAG,aAAT,SACI,0FCoBLqC,MA/Bf,SAAiBlD,GACf,MAA0BC,mBAAS,IAAnC,mBAAOkD,EAAP,KAAcC,EAAd,KAcA,OACE,sBAAKxC,UAAU,aAAf,UACE,8CACA,sBAAMA,UAAU,cAAcyC,SAfb,SAAChD,GACpBA,EAAEiD,iBACFtD,EAAMuD,YAAN,2BAAuBvD,EAAMiB,UAA7B,IAAuCC,WAAYiC,KACnDC,EAAS,IACTpD,EAAMwD,oBAAmB,IAWvB,SACE,uBACEL,MAAOA,EACPM,KAAK,OACLC,SAZa,SAACrD,GACpB+C,EAAS/C,EAAEwC,OAAOM,OAClBnD,EAAMwD,oBAAmB,IAWnBG,YAAY,YAGhB,2D,OCiCSC,MAvDf,SAAkB5D,GAChB,MAA8CC,oBAAS,GAAvD,mBAAO4D,EAAP,KAAwBL,EAAxB,KACMhC,EAAWF,mBACXwC,EAAexC,mBAmBrB,OAjBAyC,qBAAU,WACRF,GACErC,EAASc,QAAQC,eAAe,CAC9BC,SAAU,SACVC,MAAO,SACPC,OAAQ,aAEX,CAACmB,IAWF,sBAAKjD,UAAU,WAAf,UACE,yBAASA,UAAU,QAAnB,SACE,cAAC,EAAD,CACEY,SAAUA,EACVP,SAAUjB,EAAMiB,SAChBsC,YAAavD,EAAMuD,YACnBC,mBAAoBA,MAGvBK,GACC,yBAASjD,UAAU,QAAnB,SACE,cAAC,EAAD,CACEY,SAAUA,EACVW,QAASnC,EAAMmC,QACflB,SAAUjB,EAAMiB,SAChB6C,aAAc9D,EAAM8D,aACpBhB,qBAzBmB,WAC3BgB,EAAaxB,QAAQC,eAAe,CAClCC,SAAU,SACVC,MAAO,SACPC,OAAQ,gBAyBPmB,GACC,yBAAStC,IAAKuC,EAAclD,UAAU,QAAtC,SACE,cAAC,EAAD,CACEoC,UAAWhD,EAAMgD,UACjB/B,SAAUjB,EAAMiB,iB,8DC8Cb+C,MAhGf,SAAqBhE,GACjB,MAAkCC,mBAAS,CAAC,CAACgE,KAAM,IAAKC,MAAO,OAA/D,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCnE,mBAAS,IAA7C,mBAAOoE,EAAP,KAAmBC,EAAnB,KAkDA,OANAP,qBAAU,YA1CoB,WAC1B,IAAMQ,EAASvE,EAAMwE,YAAcxE,EAAMwE,WAAWC,UACpDC,QAAQC,IAAIJ,GACZ,IAAMN,EAAO,IAAIW,KACXC,EAAUN,GAAUA,EAAOO,KAAI,SAACC,EAAKC,GAGvC,IAFA,IAAIC,EAAOhB,EAAKiB,cACZC,EAAQlB,EAAKmB,WACRC,EAAE,EAAGA,EAAGC,KAAKC,MAAMP,EAAM,IAAMK,IAEtB,KADdF,GAAS,KAELF,GAAQ,EACRE,EAAQ,IAGhB,MACI,CACIlB,KAAK,GAAD,OAAKgB,EAAL,YAAaE,GACjBjB,MAAOa,EAAI,OAkBnBS,EAAYxF,EAAMmC,QAAQ8B,KAC1BwB,EAAWtE,OAAOqE,EAAUE,MAAM,EAAG,IAAM,EAC3CC,EAAUH,EAAUE,MAAM,EAAG,IACjCpB,EAAc,GAAD,OAjBE,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAKoBmB,GAAX,eAA2BE,IACxCvB,EAAaS,EAAQJ,WAIrBmB,KACD,CAAC5F,EAAMmC,UAEVuC,QAAQC,IAAIR,GAGR,sBAAKvD,UAAU,iBAAiBW,IAAKvB,EAAM6F,SAA3C,UACI,2CAAc7F,EAAMmC,QAAQ2D,KAA5B,UAAyCzB,KACzC,cAAC0B,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,MAAzC,SACI,eAACC,EAAA,EAAD,CAAWC,KAAMhC,EAAjB,UACI,+BACI,iCAAgBiC,GAAG,QAAQC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAnD,UACI,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,IACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,WAI5D,cAACC,EAAA,EAAD,CAAMC,QAAQ,QAAQC,KAAK,cAAcC,OAAO,UAChD,cAACC,EAAA,EAAD,CAAOH,QAAQ,OAAOI,UAAU,EAAOC,UAAU,EAAOC,cAAe,SAAAC,GACnE,IAeI3B,EAAWtE,OAAOiG,EAAK1B,MAAM,EAAG,IAAM,EACtCC,EAAUyB,EAAK1B,MAAM,EAAG,GAC5B,MAAM,GAAN,OAjBe,CACX,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAMUD,GADd,cAC6BE,MAGjC,cAAC0B,EAAA,EAAD,CAAOR,QAAQ,QAAQI,UAAU,EAAOC,UAAU,EAAOI,UAAW,KACpE,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAeC,UAAU,a,0BCiN9BC,MAvSf,SAAuB1H,GACrB,MAAoCC,mBAAS,IAA7C,mBAAO0H,EAAP,KAAmBC,EAAnB,KACA,EAAoC3H,mBAAS,CAC3CgE,KAAM,GACNC,MAAO,GACP4B,KAAM,KAHR,mBAAO+B,EAAP,KAAmBC,EAAnB,KAKA,EAA8B7H,mBAAS,CACrCgE,KAAM,GACNC,MAAO,GACP4B,KAAM,GACNiC,OAAQ,KAJV,mBAAO5F,EAAP,KAAgB6F,EAAhB,KAMA,EAA0B/H,mBAAS,CAAEqC,QAAS,GAAI2F,KAAM,KAAxD,mBAAO/D,EAAP,KAAcgE,EAAd,KACA,EAAoCjI,mBAAS,CAC3CmC,SAAU,GACVC,cAAe,KAFjB,mBAAO8F,EAAP,KAAmBC,EAAnB,KAIA,EAAgCnI,oBAAS,GAAzC,mBAAOoI,EAAP,KAAiBC,EAAjB,KACA,EAAkCrI,oBAAS,GAA3C,mBAAOsI,EAAP,KAAkBC,EAAlB,KACMC,EAAgBnH,mBACtB,EAAoCrB,mBAAS,IAA7C,mBAAOuE,EAAP,KAAmBkE,EAAnB,KACM7C,EAAWvE,mBACjB,EAAgCrB,mBAAS,IAAzC,mBAAO0I,EAAP,KAAiBC,EAAjB,KAiGMC,EAAe,SAACxI,GACpBA,EAAEiD,iBACEwF,IAAOjB,EAAW5D,KAAM,cAAc,GAAM8E,WAC9Cf,EAAW,eAAKH,IAChBW,GAAa,GACbI,EAAY,KAEZA,EAAY,wDAMVI,EACJnB,EAAW/B,MACX6B,EAAWsB,QAAO,SAACC,GAAD,OAChBA,EAAWC,KAAKC,MAAM,IAAMvB,EAAW/B,SAGrCuD,EACJxB,EAAW/B,MACX6B,EAAWsB,QAAO,SAACC,GAAD,OAChBA,EAAWC,KAAKC,MAAM,SAAWvB,EAAW/B,SAG1CwD,EAAWzB,EAAW/B,MAAQkD,EAAgBO,OAAOF,GAErDG,EACJ3B,EAAW/B,MACXuC,GACAiB,EAASxE,KAAI,SAACoE,GACZ,IAAIO,EAAS,sFAAkFP,EAAW9C,GAA7F,QACb,OACE,sBAAKxF,UAAU,eAAf,UACE,qBACEA,UAAU,kBACVsB,IAAI,YACJwH,QAAS,SAACrJ,GACRA,EAAEwC,OAAOZ,IACP,sFAEJA,IAAKwH,IAEP,sBACE7I,UAAU,4BACVE,QAAS,SAACT,GAAD,OA9DWsJ,EA+DGT,EAAW9C,GA/DAwD,EA+DIV,EAAWC,KA9DzDrB,EAAc,2BACTD,GADQ,IAEX/B,KAAM8D,EACN7B,OAAQ4B,UAEVrB,GAAY,GANY,IAAIqB,EAAcC,GA4DpC,SAMGV,EAAWC,aAMlBU,EAAW,uFAAmF1H,EAAQ4F,OAA3F,QAIT+B,EAAavB,GACjB,sBAAK3H,UAAU,mBAAf,UACE,qBACEA,UAAU,kBACVqB,IAAK4H,EACL3H,IAAI,YACJwH,QAAS,SAACrJ,GACRA,EAAEwC,OAAOZ,IACP,6EAGN,sBAAKrB,UAAU,iBAAf,UACE,qBAAIA,UAAU,aAAd,kBACO,qCAAQuB,EAAQ+B,SADvB,oBAGA,qBAAItD,UAAU,WAAd,cAA2BuH,EAAW/F,YACtC,oBAAIxB,UAAU,aAAd,0BACA,qBAAIA,UAAU,WAAd,UAA0BuH,EAAW9F,cAArC,aAKA0H,EACJ,sBAAKnJ,UAAU,iBAAf,UACE,qBAAKA,UAAU,kBACf,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,4BAOrBmD,qBAAU,WA7LRiG,MAAM,+CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAUyB,EAAczB,QA6L/B,IAEHpC,qBAAU,WA3LRiG,MAAM,qDAAD,OACkD7H,EAAQ4F,OAD1D,uBAGFkC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAUA,EAAKhE,EAAQ4F,SAAWG,EAAS,2BAAKhE,GAAN,IAAa5B,QAAS6D,EAAKhE,EAAQ4F,QAAQqC,UAC1FC,OAAM,SAACC,GAAD,OAAW1B,EAAY,UAAD,OAAW0B,OAevB,WACnB,IAAIvF,EAAM,IAAIH,KACV2F,EAC2C,KAA5C,KAAOpJ,OAAOgB,EAAQ8B,KAAKyB,MAAM,EAAG,MAC6B,IAAjEvE,OAAO4D,EAAIK,YAAc,EAAIjE,OAAOgB,EAAQ8B,KAAKyB,MAAM,EAAG,KAC7DsE,MAAM,0CAAD,OACuC7H,EAAQ4F,OAD/C,8CAC2FwC,EAD3F,sBAGFN,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAUuC,EAAcvC,EAAKqE,WAgKrCC,KACC,CAACtI,IAEJ4B,qBAAU,WAvLRiG,MAAM,0CAAD,OACuC7H,EAAQ4F,OAD/C,yBACsE5F,EAAQ8B,KAD9E,wBAGFgG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MACC,SAAC9D,GAAD,OACEA,EAAKuE,aACLxC,EAAS,2BAAKhE,GAAN,IAAa+D,KAAM9B,EAAKuE,YAAYC,cAAcP,UA2BhEN,GACErB,EAAcnG,QAAQC,eAAe,CACnCC,SAAU,SACVC,MAAO,SACPC,OAAQ,aAoJX,CAACwB,EAAM5B,UAEVyB,qBAAU,WACRG,EAAM5B,SAAW4B,EAAM+D,MAtKA,WACvB,IAAM2C,GAAiBzI,EAAQ+B,MAAQA,EAAM5B,QAAW4B,EAAM+D,MAAM4C,QAClE,GAEIxI,GAAkBuI,EAAezI,EAAQ+B,MAAS,KAAK2G,QAAQ,GAC/DC,EAAc3J,OAAOyJ,GAAcxJ,iBACnC2J,EAAgB5J,OAAOkB,GAAejB,iBAC5CgH,EAAc,CAAEhG,SAAU0I,EAAazI,cAAe0I,IA+JvBC,GAC/BlD,EAAc,CACZ7D,KAAM,GACNC,MAAO,GACP4B,KAAM,OAEP,CAAC5B,IAEJ,IAAM+G,GAAY5C,EAAW,uBAAyB,KAChD6C,GAAcrD,EAAW/B,KAAKqF,OAAS,EAAIF,GAAY,KACvDG,GAAW,yBAAqBF,IAEtC,OACE,qBAAKtK,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBAAMA,UAAU,aAAayC,SAAUwF,EAAvC,UACE,oBAAIjI,UAAU,+BAAd,iBACA,uBACE6C,KAAK,OACLE,YAAY,aACZD,SArKe,SAACrD,GACxByH,EAAc,2BAAKD,GAAN,IAAkB5D,KAAM5D,EAAEwC,OAAOM,SAC9CqF,GAAa,IAoKLrF,MAAO0E,EAAW5D,OAEpB,8CACA,uBACER,KAAK,OACLC,SAtKgB,SAACrD,GACzByH,EAAc,2BAAKD,GAAN,IAAkB3D,MAAO7D,EAAEwC,OAAOM,SAC/CqF,GAAa,IAqKLrF,MAAO0E,EAAW3D,MAClBP,YAAY,MAEd,sCACA,uBACEF,KAAK,OACLC,SAxKe,SAACrD,GACxBiI,GAAY,GACZR,EAAc,2BAAKD,GAAN,IAAkB/B,KAAMzF,EAAEwC,OAAOM,SAC9CqF,GAAa,IAsKLrF,MAAO0E,EAAW/B,KAClBnC,YAAY,eAEd,qBAAK/C,UAAWwK,GAAhB,SAA8B5B,IAC9B,wBAAQ1I,QAAS+H,EAAjB,uBACCF,GAAY,oBAAI/H,UAAU,WAAd,SAA0B+H,OAEzC,qBAAK/H,UAAU,oBACf,qBAAKA,UAAU,aAAaW,IAAKkH,EAAjC,SACGF,EAAYuB,EAAaC,IAE3BxB,GACC,cAAC,IAAD,CACE3H,UAAU,gBACVE,QAxKe,WACvB+E,EAASvD,QAAQC,eAAe,CAC9BC,SAAU,SACVC,MAAO,SACPC,OAAQ,cAuKL6F,GAAa/D,GACZ,cAAC,EAAD,CACEqB,SAAUA,EACVrB,WAAYA,EACZrC,QAASA,UCvLNkJ,MAnGf,SAAwBrL,GACtB,MAAkCC,mBAAS,IAA3C,mBAAOkE,EAAP,KAAkBC,EAAlB,KACA,EAAoCnE,mBAAS,IAA7C,mBAAOoE,EAAP,KAAmBC,EAAnB,KA8CA,OANAP,qBAAU,YAtCuB,WAC/B,IAAMuH,EACJtL,EAAMuL,QACNvL,EAAMuL,OAAOtH,MACb,IAAM,KAAO9C,OAAOnB,EAAMuL,OAAOtH,KAAKyB,MAAM,EAAG,OAC5C,GAAKvE,OAAOnB,EAAMuL,OAAOtH,KAAKyB,MAAM,EAAG,KACxC8F,EACFxL,EAAMgD,UAAUmD,MAAQnG,EAAMgD,UAAUmD,KAAKT,MAAM,EAAG4F,GAClDnH,EACJqH,GACAA,EAAe1G,KAAI,SAACqB,GAClB,MAAO,CACLlC,KAAMkC,EAAK,GAAGsF,WACdC,gBAAiBvF,EAAK,OAiBxBX,EAAYxF,EAAMuL,OAAOtH,KACzBwB,EAAWtE,OAAOqE,EAAUE,MAAM,EAAG,IAAM,EAC3CC,EAAUH,EAAUE,MAAM,EAAG,IACjCpB,EAAc,GAAD,OAjBE,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAKsBmB,GAAX,eAA2BE,IACxCxB,GAAaA,EAAUM,UACvBL,EAAaD,GAIbwH,KACC,CAAC3L,EAAMuL,SAEV7G,QAAQC,IAAIR,GAGV,sBAAKvD,UAAU,iBAAiBW,IAAKvB,EAAM6F,SAA3C,UACE,wDAA2BxB,KAC3B,cAAC0B,EAAA,EAAD,CAAqBC,MAAM,OAAOC,OAAO,MAAzC,SACE,eAACC,EAAA,EAAD,CAAWC,KAAMhC,EAAjB,UACE,+BACE,iCAAgBiC,GAAG,QAAQC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAnD,UACE,sBAAMC,OAAO,KAAKC,UAAU,UAAUC,YAAa,IACnD,sBAAMF,OAAO,MAAMC,UAAU,UAAUC,YAAa,WAGxD,cAACC,EAAA,EAAD,CAAMC,QAAQ,kBAAkBC,KAAK,cAAcC,OAAO,UAC1D,cAACC,EAAA,EAAD,CACEH,QAAQ,OACRI,UAAU,EACVC,UAAU,EACVC,cAAe,SAACC,GACd,IAeI3B,EAAWtE,OAAOiG,EAAK1B,MAAM,EAAG,IAAM,EACtCC,EAAUyB,EAAK1B,MAAM,EAAG,GAC5B,MAAM,GAAN,OAjBe,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAKeD,GAAjB,cAAgCE,MAGpC,cAAC0B,EAAA,EAAD,CACER,QAAQ,kBACRI,UAAU,EACVC,UAAU,EACVI,UAAW,KAEb,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAeC,UAAU,a,OC+BpBmE,MA/Hf,SAAiC5L,GAC/B,MAAkCC,mBAAS,CAACkG,KAAM,KAAMlD,WAAY,KAAMb,SAAU,KAAMyJ,WAAY,OAAtG,mBAAO7I,EAAP,KAAkB8I,EAAlB,KACA,EAAoC7L,mBAAS,CAACgE,KAAM,KAAMC,MAAO,OAAjE,mBAAO6H,EAAP,KAAmBC,EAAnB,KACA,EAA4B/L,mBAAS,CAACgE,KAAM,KAAMC,MAAO,OAAzD,mBAAOqH,EAAP,KAAeU,EAAf,KACA,EAAsBhM,oBAAS,GAA/B,mBAAOiM,EAAP,KAAYC,EAAZ,KACMrI,EAAexC,mBACfuE,EAAWvE,mBACjB,EAAgCrB,mBAAS,IAAzC,mBAAO0I,EAAP,KAAiBC,EAAjB,KA0BMC,EAAe,SAACxI,GACpBA,EAAEiD,iBACEwF,IAAOiD,EAAW9H,KAAM,cAAc,GAAM8E,WAC9CkD,EAAU,eAAIF,IACdI,GAAO,GACPvD,EAAY,KAEZA,EAAY,wDAaVwD,EAAeF,GACjB,sBAAKtL,UAAWsL,EAAM,eAAiB,YAAa3K,IAAKuC,EAAzD,UACE,oBAAIlD,UAAU,gBAAd,0CACA,qBAAIA,UAAU,WAAd,UAA0BoC,EAAUC,WAApC,OACA,oBAAIrC,UAAU,gBAAd,6BACA,qBAAIA,UAAU,WAAd,cAA2BoC,EAAUZ,YACrC,oBAAIxB,UAAU,gBAAd,2BACA,qBAAIA,UAAU,WAAd,cAA2BoC,EAAU6I,cACrC,oBAAIjL,UAAU,gBAAd,kCACA,oBAAIA,UAAU,WAAd,8BAIAmJ,EACF,sBAAKnJ,UAAU,oBAAf,UACE,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,yBAqBrB,OAVAmD,qBAAU,WA5ERiG,MAAM,6FACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAU2F,EAAa,2BAAI9I,GAAL,IAAgBmD,KAAMA,EAAKkG,QAAQlG,aA4EhE,IAEHpC,qBAAU,YA3EkB,WAC1B,IAAMuH,EAAaS,EAAW9H,MAAS,IAAM,KAAO9C,OAAO4K,EAAW9H,KAAKyB,MAAM,EAAG,OAAU,GAAKvE,OAAO4K,EAAW9H,KAAKyB,MAAM,EAAG,KAC7HzC,EAAaqI,KAAiB,OAASnK,OAAO6B,EAAUmD,KAAKmF,GAAY,KAAKnK,OAAO6B,EAAUmD,KAAKmF,GAAY,IAAO,KAAKT,QAAQ,GACpID,IAAiB3H,EAAW,IAAM,GAAKsI,EAAOrH,OAAO2G,QAAQ,GAC7DgB,EAAa1K,OAAOyJ,EAAeW,EAAOrH,OAAO2G,QAAQ,GAC/DiB,EAAa,2BAAI9I,GAAL,IAAgBC,WAAYA,EAAYb,SAAUwI,EAAciB,WAAYA,KAuExFS,GAZEF,GAAgBtI,EAAaxB,QAAQC,eAAe,CACpDC,SAAU,SACVC,MAAO,SACPC,OAAQ,WAWVsJ,EAAc,CAAC/H,KAAM,GAAIC,MAAO,OAC/B,CAACqH,IAGF,sBAAK3K,UAAU,gBAAf,UACE,uBAAMA,UAAU,gBAAeiI,aAAcA,EAA7C,UACE,+CACA,uBACE1F,MAAO4I,EAAW7H,MAClBR,SA1EkB,SAACrD,GACzB2L,EAAc,2BAAID,GAAL,IAAiB7H,MAAO7D,EAAEwC,OAAOM,SAC9CgJ,GAAO,IAyED1I,KAAK,OACLE,YAAY,MAEd,oBAAI/C,UAAU,cAAd,2BACA,uBACEuC,MAAO4I,EAAW9H,KAClBP,SAtFiB,SAACrD,GACxB2L,EAAc,2BAAID,GAAL,IAAiB9H,KAAM5D,EAAEwC,OAAOM,SAC7CgJ,GAAO,IAqFD1I,KAAK,OACLE,YAAY,eAEd,uBACA,wBAAQ7C,QAAS+H,EAAjB,mBACCF,GAAY,oBAAI/H,UAAU,WAAd,SAA0B+H,OAEzC,qBAAK/H,UAAU,oBACf,qBAAKA,UAAU,mBAAf,SACGsL,EAAME,EAAerC,IAEvBmC,GAAO,cAAC,IAAD,CAA4BtL,UAAU,gBAAgBE,QA5EzC,WACvB+E,EAASvD,QAAQC,eAAe,CAC9BC,SAAU,SACVC,MAAO,SACPC,OAAQ,cAyEPwJ,GAAO,cAAC,EAAD,CAAgBrG,SAAUA,EAAS7C,UAAWA,EAAWkJ,IAAKA,EAAKX,OAAQA,QCxC1EgB,MAnFf,SAAcvM,GACZ,MAAgCC,mBAAS,CAACiB,WAAY,GAAI+C,KAAM,aAAc6B,KAAM,YAApF,mBAAO7E,EAAP,KAAiBsC,EAAjB,KACA,EAAgDtD,mBAAS,IAAzD,mBAAOuM,EAAP,KAAyBC,EAAzB,KACA,EAA0CxM,mBAAS,IAAnD,mBAAOyM,EAAP,KAAsBC,EAAtB,KACA,EAA8B1M,mBAAS,CAACmC,SAAU,GAAIC,cAAe,KAArE,mBAAOF,EAAP,KAAgB6F,EAAhB,KACA,EAAkC/H,mBAAS,CAACkG,KAAM,GAAIlD,WAAY,GAAI2J,UAAW,KAAjF,mBAAO5J,EAAP,KAAkB8I,EAAlB,KAyDA,OAZA/H,qBAAU,WAtBRiG,MAAM,6FACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAU2F,EAAa,2BAAI9I,GAAL,IAAgBmD,KAAMA,EAAKkG,QAAQlG,WApBjE6D,MAAM,+EAGHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAUsG,EAAoBtG,EAAK0G,QAAQzC,QAInDJ,MAAM,6FAGHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAAC9D,GAAD,OAAUwG,EAAiBxG,EAAKuE,YAAYC,cAAcP,QAgClE0C,SAASC,MAAQ,aAChB,IAEHhJ,qBAAU,YAxBc,WACtB,IAAM6G,GAAiB3J,EAASC,WAAasL,EAAkBE,GAAe7B,QAAQ,GAChFxI,GAAkBuI,EAAc3J,EAASC,WAAc,KAAK2J,QAAQ,GACpEC,EAAc3J,OAAOyJ,GAAcxJ,iBACnC2J,EAAgB5J,OAAOkB,GAAejB,iBAC5C4G,EAAW,CAAE5F,SAAU0I,EAAazI,cAAe0I,IAoBnDC,GAjB0B,WAC1B,IAAMM,EAAc,IAAM,KAAOnK,OAAOF,EAASgD,KAAKyB,MAAM,EAAG,OAAU,EAAIvE,OAAOF,EAASgD,KAAKyB,MAAM,EAAG,KACrGzC,EAAaD,EAAUmD,QAAW,OAAShF,OAAO6B,EAAUmD,KAAKmF,GAAY,KAAKnK,OAAO6B,EAAUmD,KAAKmF,GAAY,IAAO,KAAKT,QAAQ,GACxI+B,EAAa3J,EAAa,IAAO,EACvC6I,EAAa,2BAAI9I,GAAL,IAAgBC,WAAYA,EAAY2J,UAAWA,KAc/DN,KACC,CAACrL,EAASC,aAGX,sBAAKN,UAAWZ,EAAMW,eAAtB,UACI,cAAC,IAAD,CACEqM,OAAK,EACLC,KAAK,IACLC,OAAQ,kBAAM,cAAC,EAAD,CAAU/K,QAASA,EAASlB,SAAUA,EAAUsC,YAAaA,EAAaP,UAAWA,OAErG,cAAC,IAAD,CACEgK,OAAK,EACLC,KAAK,kBACLC,OAAQ,kBAAM,cAACC,EAAD,OAEhB,cAAC,IAAD,CACEH,OAAK,EACLC,KAAK,aACLC,OAAQ,kBAAM,cAACE,EAAD,WC/DTC,MAff,WAEE,MAA8CpN,mBAAS,SAAvD,mBAAOM,EAAP,KAAwBD,EAAxB,KAGMK,EAAc,oBADSJ,EAAkB,GAAK,wBAGpD,OACE,sBAAKK,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,eAAgBA,EAAgBJ,gBAAiBA,EAAiBD,mBAAoBA,IAC9F,cAAC,EAAD,CAAMK,eAAgBA,EAAgBJ,gBAAiBA,QCV7D+M,IAASJ,OACP,cAAC,IAAD,CAAeK,SAAS,WAAxB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJV,SAASW,eAAe,W","file":"static/js/main.bee75c49.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { HiTrendingDown } from \"react-icons/hi\";\nimport './Header.css'\n\nconst Header = (props) => {\n  const [active, setActive] = useState(\"false\");\n\n  const handleClick = (e) => {\n    setActive(!active);\n    props.setNavbarClickable(!props.navbarClickable)\n  };\n\n  \n  const navbarLinkHandle = active ? null : 'navbarOpen';\n  const navbarLinkClass = `navbarClosed ${navbarLinkHandle}`\n\n  const navbarIconHandle = active ? null : 'navbarIconRotate';\n  const navbarIconClass = `navbarIcon ${navbarIconHandle}`\n\n  const titleClass  = `navbarTitle ${props.routePageClass}`\n\n  return (\n    <nav className='navbarMain'>\n      <div className='navbar'>\n        <Link to=\"/\" className={titleClass}>\n          What if?\n        </Link>\n        <HiTrendingDown className={navbarIconClass} onClick={handleClick}/>\n        <div className={navbarLinkClass}>\n          <Link to=\"/Crypto-Details\" onClick={handleClick} className='navbarLinks'>\n            Crypto Calculator\n          </Link>\n          <Link to=\"/Inflation\" onClick={handleClick} className='navbarLinks'>\n            Inflation Calculator\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/cionpiggie_VP9.6dd0ebb0.webm\";","import { Link } from \"react-router-dom\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport { useRef } from \"react\";\nimport Video from '../../videos/cionpiggie_VP9.webm'\n\nfunction Prices(props) {\n    const inputAmount = props.mainData.inputPrice && Number(props.mainData.inputPrice).toLocaleString()\n    const bitcoinDetailsRef = useRef()\n\n    const handleArrowClick = () => {\n        bitcoinDetailsRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"center\",\n          inline: \"center\",\n        });\n      };\n\n    return (\n        <>\n            <div className='prices'ref={props.priceRef}>\n                {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9a/BTC_Logo.svg/183px-BTC_Logo.svg.png\" alt='btc'/> */}\n                <div className='coinFlip'>\n                    {window.innerHeight < window.innerWidth ? <video controls autostart autoPlay loop controls={false} src={Video} className='coinVideo' type=\"video/webm\" /> : <img className='coinImg' src='https://bit.ly/3plwE0I' alt='img'/>}\n                </div>\n                <div className='pricesLower'>\n                <h1 className='pricesHomeText'>your <span className='boldText'>${inputAmount}</span> is now worth</h1>\n                <h1 className='boldText'>${props.results.priceNow}</h1>\n                <h1 className='pricesHomeText'>that's a change of</h1>\n                <h1 className='boldText'>{props.results.percentChange}%</h1>\n                <Link to='/Crypto-Details'>\n                    <button className='pricesButton'>Try out a different cryptocurrency here</button>\n                </Link>\n                </div>\n                <MdOutlineKeyboardArrowDown className='pricesArrow' onClick={handleArrowClick} />\n            </div>\n            <div className='bitcoinDetailsUpper'>\n                <div className='bitcoinDetails' ref={bitcoinDetailsRef}>\n                    <h1 >What is Bitcoin?</h1>\n                    <p>Bitcoin is the first and most valuable cryptocurrency in the world.</p>\n                    <p>It is often referred to as</p>\n                    <h1 >Digital Gold</h1>\n                    <p>and serves a similar purpose in hedging against inflation. The US Government has printed trillions of dollars over the past year and almost</p>\n                    <a href='https://www.cityam.com/almost-a-fifth-of-all-us-dollars-were-created-this-year/' rel='noreferrer' target=\"_blank\"><h1>1/5th of all US Dollars were created in 2020.</h1></a>\n                    <p>Inflation is a large issue in the US and Bitcoin offers a solution in being a decentralization, deflationary asset that cannot be manipulated by central governments.    </p>\n                    <a className='bitcoinLink' href='https://www.nerdwallet.com/article/investing/what-is-bitcoin' rel='noreferrer' target=\"_blank\"><button >Read more about Bitcoin</button></a>\n                </div>\n                <MdOutlineKeyboardArrowDown className='bitcoinArrow' onClick={props.handleInflationClick} />\n            </div>\n        </>\n    )\n}\n\nexport default Prices;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction SecondInvestment(props) {\n    return (\n        <div className='home3lower'>\n            <img src=\"https://findicons.com/files/icons/2219/dot_pictograms/256/usd_dollar_money_cash.png\" alt='btc'/>\n            <div className='inflationHome'>\n                <h1 className='inflationHomeText'>By holding the US Dollar</h1>\n                <h1 className='inflationHomeText'>your <span className='boldText'>${props.mainData.inputPrice}</span> has lost</h1>\n                <h1 className='boldText'>{props.inflation.percentage}%</h1>\n                <h1 className='inflationHomeText'>of its value since 2017.</h1>\n                <Link to='/Inflation'>\n                    <button>Try out some different values for inflation</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default SecondInvestment\n","import React, { useState } from \"react\";\n\nfunction Landing(props) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setMainData({ ...props.mainData, inputPrice: value });\n    setValue(\"\");\n    props.setHomepageVisible(true);\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    props.setHomepageVisible(false);\n  };\n\n  return (\n    <div className=\"home1Lower\">\n      <h1>you invested</h1>\n      <form className=\"landingForm\" onSubmit={handleSubmit}>\n        <input\n          value={value}\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"$1000\"\n        ></input>\n      </form>\n      <h1>into Bitcoin in 2017.</h1>\n    </div>\n  );\n}\n\nexport default Landing;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport Prices from \"./Prices\";\nimport SecondInvestment from \"./SecondInvestment\";\nimport Landing from \"./Landing\";\nimport \"./Page1.css\";\n\nfunction Homepage(props) {\n  const [homepageVisible, setHomepageVisible] = useState(false);\n  const priceRef = useRef();\n  const inflationRef = useRef();\n\n  useEffect(() => {\n    homepageVisible &&\n      priceRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n        inline: \"center\",\n      });\n  }, [homepageVisible]);\n\n  const handleInflationClick = () => {\n    inflationRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  return (\n    <div className=\"homepage\">\n      <section className=\"home1\">\n        <Landing\n          priceRef={priceRef}\n          mainData={props.mainData}\n          setMainData={props.setMainData}\n          setHomepageVisible={setHomepageVisible}\n        />\n      </section>\n      {homepageVisible && (\n        <section className=\"home2\">\n          <Prices\n            priceRef={priceRef}\n            results={props.results}\n            mainData={props.mainData}\n            inflationRef={props.inflationRef}\n            handleInflationClick={handleInflationClick}\n          />\n        </section>\n      )}\n      {homepageVisible && (\n        <section ref={inflationRef} className=\"home3\">\n          <SecondInvestment\n            inflation={props.inflation}\n            mainData={props.mainData}\n          />\n        </section>\n      )}\n    </div>\n  );\n}\n\nexport default Homepage;\n","import React, { useState, useEffect } from 'react'\nimport { ResponsiveContainer ,AreaChart, Area, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\nfunction CryptoChart(props) {\n    const [chartData, setChartData] = useState([{date: 'x', price: 'y'}])\n    const [headerDate, setHeaderDate] = useState('')\n\n    const cryptoChartCalculator = () => {\n        const newArr = props.cryptoData && props.cryptoData.reverse()\n        console.log(newArr)\n        const date = new Date()\n        const mapData = newArr && newArr.map((day, index) => {\n            let year = date.getFullYear()\n            let month = date.getMonth()\n            for (let i=0; i<(Math.floor(index/30)); i++) {\n                month -= 1\n                if (month === 0) {\n                    year -= 1\n                    month = 12\n                }\n            }\n            return (\n                {\n                    date: `${year}-${month}`,\n                    price: day[1]\n                }\n            )\n        })\n        const months = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"August\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ];\n        let inputDate = props.results.date\n        let monthNum = Number(inputDate.slice(3, 5)) - 1;\n        let yearNum = inputDate.slice(6, 10);\n        setHeaderDate(`${months[monthNum]} of ${yearNum}`)\n        setChartData(mapData.reverse())\n    }\n\n    useEffect(() => {\n        cryptoChartCalculator()\n    }, [props.results])\n\n    console.log(chartData)\n\n    return (\n        <div className='inflationChart' ref={props.chartRef}>\n            <h1>Price of {props.results.coin} since {headerDate}</h1>\n            <ResponsiveContainer width=\"100%\" height='70%'>\n                <AreaChart data={chartData} >\n                    <defs>\n                        <linearGradient id='color' x1='0' y1='0' x2='0' y2='1'>\n                            <stop offset=\"0%\" stopColor='#4D4E52' stopOpacity={1}/>\n                            <stop offset=\"75%\" stopColor='#4D4E52' stopOpacity={0.15}/>\n                        </linearGradient>\n                    </defs>\n\n                    <Area dataKey=\"price\" fill='url(#color)' stroke='black'/>\n                    <XAxis dataKey=\"date\" axisLine={false} tickLine={false} tickFormatter={item => {\n                        const months = [\n                            \"January\",\n                            \"February\",\n                            \"March\",\n                            \"April\",\n                            \"May\",\n                            \"June\",\n                            \"July\",\n                            \"August\",\n                            \"September\",\n                            \"October\",\n                            \"November\",\n                            \"December\",\n                          ];\n                      \n                        let monthNum = Number(item.slice(5, 7)) - 1;\n                        let yearNum = item.slice(0, 4);\n                        return(\n                            `${months[monthNum]} - ${yearNum}`\n                        )\n                    }}/>\n                    <YAxis dataKey=\"price\" axisLine={false} tickLine={false} tickCount={10} />\n                    <Tooltip />\n                    <CartesianGrid vertical={false}/>\n                </AreaChart>\n            </ResponsiveContainer>\n        </div>\n    )\n}\n\nexport default CryptoChart;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport CryptoChart from \"./CryptoChart\";\nimport \"./Page2.css\";\nimport moment from 'moment';\n\nfunction PricesDetails(props) {\n  const [cryptoList, setCryptoList] = useState([]);\n  const [parameters, setParameters] = useState({\n    date: \"\",\n    price: \"\",\n    coin: \"\",\n  });\n  const [results, setResults] = useState({\n    date: \"\",\n    price: \"\",\n    coin: \"\",\n    coinId: \"\",\n  });\n  const [price, setPrice] = useState({ current: \"\", past: \"\" });\n  const [cryptoCalc, setCryptoCalc] = useState({\n    priceNow: \"\",\n    percentChange: \"\",\n  });\n  const [dropDown, setDropDown] = useState(false);\n  const [resultJSX, setResultJSX] = useState(false);\n  const focusDropDown = useRef();\n  const [cryptoData, setCryptoData] = useState([]);\n  const chartRef = useRef();\n  const [errorMsg, setErrorMsg] = useState('')\n\n  // Api Calls and Calculating Functions\n\n  const cryptoApiCall = () => {\n    fetch(\"https://api.coingecko.com/api/v3/coins/list\")\n      .then((res) => res.json())\n      .then((data) => setCryptoList(data));\n  };\n\n  const currentApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/simple/price?ids=${results.coinId}&vs_currencies=usd`\n    )\n      .then((res) => res.json())\n      .then((data) => data[results.coinId] && setPrice({ ...price, current: data[results.coinId].usd }))\n      .catch((error) => setErrorMsg(`Error: ${error}`));\n  };\n\n  const oldApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/${results.coinId}/history?date=${results.date}&localization=false`\n    )\n      .then((res) => res.json())\n      .then(\n        (data) =>\n          data.market_data &&\n          setPrice({ ...price, past: data.market_data.current_price.usd })\n      );\n  };\n\n  const chartApiCall = () => {\n    let day = new Date();\n    let dayValue =\n      (2021 - Number(results.date.slice(6, 10))) * 365 +\n      (Number(day.getMonth()) + 1 - Number(results.date.slice(3, 5))) * 30;\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/${results.coinId}/market_chart?vs_currency=usd&days=${dayValue}&interval=monthly`\n    )\n      .then((res) => res.json())\n      .then((data) => setCryptoData(data.prices));\n  };\n\n  const cryptoCalculator = () => {\n    const currentPrice = ((results.price * price.current) / price.past).toFixed(\n      2\n    );\n    const percentChange = ((currentPrice / results.price) * 100).toFixed(0);\n    const priceLocale = Number(currentPrice).toLocaleString();\n    const percentLocale = Number(percentChange).toLocaleString();\n    setCryptoCalc({ priceNow: priceLocale, percentChange: percentLocale });\n  };\n\n  const scrollFunction = () => {\n    resultsJSX &&\n      focusDropDown.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\",\n        inline: \"center\",\n      });\n  };\n\n  // Handle Changes, Clicks, and Submits\n\n  const handleDateChange = (e) => {\n    setParameters({ ...parameters, date: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handlePriceChange = (e) => {\n    setParameters({ ...parameters, price: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handleCoinChange = (e) => {\n    setDropDown(true);\n    setParameters({ ...parameters, coin: e.target.value });\n    setResultJSX(false);\n  };\n\n  const handleCryptoClick = (e, cryptoItemId, cryptoItemName) => {\n    setParameters({\n      ...parameters,\n      coin: cryptoItemName,\n      coinId: cryptoItemId,\n    });\n    setDropDown(false);\n  };\n\n  const handleArrowClick = () => {\n    chartRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (moment(parameters.date, \"DD-MM-YYYY\", true).isValid()) {\n      setResults({ ...parameters });\n      setResultJSX(true);\n      setErrorMsg('')\n    } else {\n      setErrorMsg('Error: Date is formatted incorrectly or unavailable')\n    }\n  };\n\n  // Crypto Drop Down List\n\n  const cryptoStartCoin =\n    parameters.coin &&\n    cryptoList.filter((cryptoItem) =>\n      cryptoItem.name.match(\"^\" + parameters.coin)\n    );\n\n  const cryptoIncludeCoin =\n    parameters.coin &&\n    cryptoList.filter((cryptoItem) =>\n      cryptoItem.name.match(\"(?<!^)\" + parameters.coin)\n    );\n\n  const combList = parameters.coin && cryptoStartCoin.concat(cryptoIncludeCoin);\n\n  const cryptoJSX =\n    parameters.coin &&\n    dropDown &&\n    combList.map((cryptoItem) => {\n      let coinImage = `https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/32/${cryptoItem.id}.png`;\n      return (\n        <div className=\"cryptoJSXDiv\">\n          <img\n            className=\"cryptoCoinImage\"\n            alt=\"coinImage\"\n            onError={(e) => {\n              e.target.src =\n                \"https://assets.coingecko.com/coins/images/19978/thumb/logo.f3a6bd24.png?1636355493\";\n            }}\n            src={coinImage}\n          />\n          <span\n            className=\"cryptoElement regularFont\"\n            onClick={(e) =>\n              handleCryptoClick(e, cryptoItem.id, cryptoItem.name)\n            }\n          >\n            {cryptoItem.name}\n          </span>\n        </div>\n      );\n    });\n\n  let iconWebsite = `https://raw.githubusercontent.com/ErikThiart/cryptocurrency-icons/master/128/${results.coinId}.png`;\n\n  // Results JSX\n\n  const resultsJSX = resultJSX && (\n    <div className=\"resultsJSXBorder\">\n      <img\n        className=\"cryptoCoinImage\"\n        src={iconWebsite}\n        alt=\"coinImage\"\n        onError={(e) => {\n          e.target.src =\n            \"https://www.pngall.com/wp-content/uploads/2/Question-Mark-PNG-Image.png\";\n        }}\n      />\n      <div className=\"resultsJSXText\">\n        <h1 className=\"cryptoText\">\n          Your <span>${results.price}</span> is now worth:\n        </h1>\n        <h1 className=\"boldText\">${cryptoCalc.priceNow}</h1>\n        <h1 className=\"cryptoText\">a change of:</h1>\n        <h1 className=\"boldText\">{cryptoCalc.percentChange}%</h1>\n      </div>\n    </div>\n  );\n\n  const loadingJSX = (\n    <div className=\"skeletonCrypto\">\n      <div className=\"skeleton-icon\"></div>\n      <div className=\"skeletonTextArea\">\n        <div className=\"skeleton-text\"></div>\n        <div className=\"skeleton-text-big\"></div>\n        <div className=\"skeleton-text\"></div>\n        <div className=\"skeleton-text-big\"></div>\n        <div className=\"skeleton-text\"></div>\n        <div className=\"skeleton-text-big\"></div>\n      </div>\n    </div>\n  );\n\n  // Use Effects\n\n  useEffect(() => {\n    cryptoApiCall();\n  }, []);\n\n  useEffect(() => {\n    currentApiCall();\n    chartApiCall();\n  }, [results]);\n\n  useEffect(() => {\n    oldApiCall();\n    scrollFunction();\n  }, [price.current]);\n\n  useEffect(() => {\n    price.current && price.past && cryptoCalculator();\n    setParameters({\n      date: \"\",\n      price: \"\",\n      coin: \"\",\n    });\n  }, [price]);\n\n  const dropDown1 = dropDown ? \"cryptoDropDownActive\" : null;\n  const dropDownCSS = parameters.coin.length > 0 ? dropDown1 : null;\n  const dropDownVal = `cryptoDropDown ${dropDownCSS}`;\n\n  return (\n    <div className=\"cryptoUpper\">\n      <div className=\"cryptoMain\">\n        <form className=\"cryptoForm\" onSubmit={handleSubmit}>\n          <h1 className=\"regularFont priceDetailTitle\">On </h1>\n          <input\n            type=\"text\"\n            placeholder=\"DD-MM-YYYY\"\n            onChange={handleDateChange}\n            value={parameters.date}\n          ></input>\n          <h1>You invested</h1>\n          <input\n            type=\"text\"\n            onChange={handlePriceChange}\n            value={parameters.price}\n            placeholder=\"$\"\n          ></input>\n          <h1>into</h1>\n          <input\n            type=\"text\"\n            onChange={handleCoinChange}\n            value={parameters.coin}\n            placeholder=\"Enter Coin\"\n          ></input>\n          <div className={dropDownVal}>{cryptoJSX}</div>\n          <button onClick={handleSubmit}>Calculate</button>\n          {errorMsg && <h1 className='errorMsg'>{errorMsg}</h1>}\n        </form>\n        <div className=\"inflationDivide\"></div>\n        <div className=\"resultsJSX\" ref={focusDropDown}>\n          {resultJSX ? resultsJSX : loadingJSX}\n        </div>\n        {resultJSX && (\n          <MdOutlineKeyboardArrowDown\n            className=\"homepageArrow\"\n            onClick={handleArrowClick}\n          />\n        )}\n        {resultJSX && cryptoData && (\n          <CryptoChart\n            chartRef={chartRef}\n            cryptoData={cryptoData}\n            results={results}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PricesDetails;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  Area,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n} from \"recharts\";\n\nfunction InflationChart(props) {\n  const [chartData, setChartData] = useState([]);\n  const [headerDate, setHeaderDate] = useState(\"\");\n\n  const inflationChartCalculator = () => {\n    const indexValue =\n      props.result &&\n      props.result.date &&\n      12 * (2021 - Number(props.result.date.slice(6, 10))) +\n        (11 - Number(props.result.date.slice(3, 5)));\n    let inflationSlice =\n      props.inflation.data && props.inflation.data.slice(0, indexValue);\n    const chartData =\n      inflationSlice &&\n      inflationSlice.map((data) => {\n        return {\n          date: data[0].toString(),\n          CPI_index_value: data[1],\n        };\n      });\n    const months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\",\n    ];\n    let inputDate = props.result.date;\n    let monthNum = Number(inputDate.slice(3, 5)) - 1;\n    let yearNum = inputDate.slice(6, 10);\n    setHeaderDate(`${months[monthNum]} of ${yearNum}`);\n    chartData && chartData.reverse();\n    setChartData(chartData);\n  };\n\n  useEffect(() => {\n    inflationChartCalculator();\n  }, [props.result]);\n\n  console.log(chartData);\n\n  return (\n    <div className=\"inflationChart\" ref={props.chartRef}>\n      <h1>CPI Index Value since {headerDate}</h1>\n      <ResponsiveContainer width=\"100%\" height=\"70%\">\n        <AreaChart data={chartData}>\n          <defs>\n            <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n              <stop offset=\"0%\" stopColor=\"#4D4E52\" stopOpacity={1} />\n              <stop offset=\"75%\" stopColor=\"#4D4E52\" stopOpacity={0.15} />\n            </linearGradient>\n          </defs>\n          <Area dataKey=\"CPI_index_value\" fill=\"url(#color)\" stroke=\"black\" />\n          <XAxis\n            dataKey=\"date\"\n            axisLine={false}\n            tickLine={false}\n            tickFormatter={(item) => {\n              const months = [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\",\n              ];\n\n              let monthNum = Number(item.slice(5, 7)) - 1;\n              let yearNum = item.slice(0, 4);\n              return `${months[monthNum]} - ${yearNum}`;\n            }}\n          />\n          <YAxis\n            dataKey=\"CPI_index_value\"\n            axisLine={false}\n            tickLine={false}\n            tickCount={10}\n          />\n          <Tooltip />\n          <CartesianGrid vertical={false} />\n        </AreaChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}\n\nexport default InflationChart;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport InflationChart from \"./InflationChart\";\nimport { MdOutlineKeyboardArrowDown } from \"react-icons/md\";\nimport './Page3.css'\nimport moment from 'moment'\n\n\nfunction SecondInvestmentDetails(props) {\n  const [inflation, setInflation] = useState({data: null, percentage: null, priceNow: null, amountLost: null})\n  const [inputValue, setInputValue] = useState({date: null, price: null})\n  const [result, setResult] = useState({date: null, price: null})\n  const [jsx, setJsx] = useState(false);\n  const inflationRef = useRef();\n  const chartRef = useRef()\n  const [errorMsg, setErrorMsg] = useState('')\n\n  const inflationApiCall = () => {\n    fetch(\"https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA.json?api_key=dDi1qzdRACZxKWbNGJRx\")\n      .then((res) => res.json())\n      .then((data) => setInflation({...inflation, data: data.dataset.data}))\n  };\n\n  const inflationCalculator = () => {\n    const indexValue = inputValue.date && (12 * (2021 - Number(inputValue.date.slice(6, 10)))) + (11 - Number(inputValue.date.slice(3, 5)))\n    const percentage = indexValue && (((274.31 - Number(inflation.data[indexValue][1]))/Number(inflation.data[indexValue][1])) * 100).toFixed(2);\n    const currentPrice = ((percentage/100 + 1) * result.price).toFixed(2)\n    const amountLost = Number(currentPrice - result.price).toFixed(2)\n    setInflation({...inflation, percentage: percentage, priceNow: currentPrice, amountLost: amountLost})\n  }\n\n  const handleDateChange = (e) => {\n    setInputValue({...inputValue, date: e.target.value});\n    setJsx(false)\n  };\n\n  const handlePriceChange = (e) => {\n    setInputValue({...inputValue, price: e.target.value});\n    setJsx(false)\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (moment(inputValue.date, \"DD-MM-YYYY\", true).isValid()) {\n      setResult({...inputValue})\n      setJsx(true);\n      setErrorMsg('')\n    } else {\n      setErrorMsg('Error: Date is formatted incorrectly or unavailable')\n    }\n\n  };\n\n  const handleArrowClick = () => {\n    chartRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  };\n\n  const inflationJSX = jsx && ( \n      <div className={jsx ? 'inflationJsx' : 'invisible'} ref={inflationRef}>\n        <h1 className='inflationText'> Cumulative Inflation Rate: </h1>\n        <h1 className='boldText'>{inflation.percentage}%</h1>\n        <h1 className='inflationText'>Inflated Price:</h1>\n        <h1 className='boldText'>${inflation.priceNow}</h1>\n        <h1 className='inflationText'>You have lost</h1>\n        <h1 className='boldText'>${inflation.amountLost}</h1>\n        <h1 className='inflationText'>of value by holding </h1>\n        <h1 className='boldText'>the US Dollar</h1>\n      </div>\n  );\n\n  const loadingJSX = \n      <div className='skeletonInflation'>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n        <div className='skeleton-text'></div>\n        <div className='skeleton-text-big'></div>\n      </div>\n\n  const scrollFunction = () => {\n      inflationJSX && inflationRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n      inline: \"center\",\n    });\n  }\n\n  useEffect(() => {\n    inflationApiCall()\n  }, [])\n\n  useEffect(() => {\n    inflationCalculator()\n    scrollFunction()\n    setInputValue({date: '', price: ''})\n  }, [result])\n\n  return (\n    <div className='inflationMain'>\n      <form className='inflationForm'handleSubmit={handleSubmit}>\n        <h1>You held your</h1>\n        <input\n          value={inputValue.price}\n          onChange={handlePriceChange}\n          type=\"text\"\n          placeholder=\"$\"\n        ></input>\n        <h1 className=\"regularFont\">in cash since</h1>\n        <input\n          value={inputValue.date}\n          onChange={handleDateChange}\n          type=\"text\"\n          placeholder=\"DD-MM-YYYY\"\n        ></input>\n        <br />\n        <button onClick={handleSubmit}>Enter</button>\n        {errorMsg && <h1 className='errorMsg'>{errorMsg}</h1>}\n      </form>\n      <div className='inflationDivide'></div>\n      <div className='inflationResults'>\n        {jsx ? inflationJSX : loadingJSX}\n      </div>\n      {jsx && <MdOutlineKeyboardArrowDown className='homepageArrow' onClick={handleArrowClick} />}\n      {jsx && <InflationChart chartRef={chartRef}inflation={inflation} jsx={jsx} result={result}/>}\n    </div>  \n  );\n}\n\nexport default SecondInvestmentDetails;\n","import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Homepage from \"./Page 1/Homepage\";\nimport CryptoPage from './Page 2 - Crypto/CryptoPage';\nimport InflationPage from './Page 3 - Inflation/InflationPage';\n\nfunction Main(props) {\n  const [mainData, setMainData] = useState({inputPrice: '', date: '30-03-2017', coin: 'bitcoin'})\n  const [coinPriceCurrent, setCoinPriceCurrent] = useState('');\n  const [coinPricePast, setCoinPricePast] = useState('');\n  const [results, setResults] = useState({priceNow: '', percentChange: ''});\n  const [inflation, setInflation] = useState({data: '', percentage: '', amountNow: ''})\n\n// APIs\n\n  const currentApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd`\n    )\n      .then((res) => res.json())\n      .then((data) => setCoinPriceCurrent(data.bitcoin.usd))\n  };\n\n  const oldApiCall = () => {\n    fetch(\n      `https://api.coingecko.com/api/v3/coins/bitcoin/history?date=30-03-2017&localization=false`\n    )\n      .then((res) => res.json())\n      .then((data) => setCoinPricePast(data.market_data.current_price.usd))\n  };\n\n// Calculators\n\n  const inflationApiCall = () => {\n    fetch(`https://data.nasdaq.com/api/v3/datasets/RATEINF/CPI_USA.json?api_key=dDi1qzdRACZxKWbNGJRx`)\n      .then((res) => res.json())\n      .then((data) => setInflation({...inflation, data: data.dataset.data}))\n  };\n\n  const cryptoCalculator= () => {\n    const currentPrice = ((mainData.inputPrice * coinPriceCurrent)/coinPricePast).toFixed(2);\n    const percentChange = ((currentPrice/ mainData.inputPrice) * 100).toFixed(0);\n    const priceLocale = Number(currentPrice).toLocaleString();\n    const percentLocale = Number(percentChange).toLocaleString();\n    setResults({ priceNow: priceLocale, percentChange: percentLocale });\n  };\n\n  const inflationCalculator = () => {\n    const indexValue = (12 * (2021 - Number(mainData.date.slice(6, 10)))) + (9 - Number(mainData.date.slice(3, 5)))\n    const percentage = inflation.data && (((274.31 - Number(inflation.data[indexValue][1]))/Number(inflation.data[indexValue][1])) * 100).toFixed(2)\n    const amountNow = (percentage / 100) + 1\n    setInflation({...inflation, percentage: percentage, amountNow: amountNow})\n  }\n\n// UseEffects\n\n  useEffect(() => {\n    inflationApiCall()\n    currentApiCall()\n    oldApiCall()\n    document.title = \"What if?\"\n  }, [])\n\n  useEffect(() => {\n    cryptoCalculator()\n    inflationCalculator()\n  }, [mainData.inputPrice])\n\n  return (\n    <div className={props.routePageClass}>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Homepage results={results} mainData={mainData} setMainData={setMainData} inflation={inflation}/>}\n        />\n        <Route\n          exact\n          path=\"/Crypto-Details\"\n          render={() => <CryptoPage />}\n        />\n        <Route\n          exact\n          path=\"/Inflation\"\n          render={() => <InflationPage/>}\n        />\n    </div>\n  );\n}\n\nexport default Main;\n","import './App.css';\nimport Header from './components/Main/Header';\nimport Main from './components/Main/Main';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [navbarClickable, setNavbarClickable] = useState('false')\n\n  const handleRoutePageClass = navbarClickable ? '' : 'routePageUnclickable';\n  const routePageClass = `routePage ${handleRoutePageClass}`\n\n  return (\n    <div className=\"App\">\n      <Header routePageClass={routePageClass} navbarClickable={navbarClickable} setNavbarClickable={setNavbarClickable}/>\n      <Main routePageClass={routePageClass} navbarClickable={navbarClickable}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename='/what-if'>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}